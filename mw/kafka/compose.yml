apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka01
  namespace: mw
spec:
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
        flagno: kafka01
    spec:
      containers:
        - name: kafka01
          image: bitnami/kafka:3.1.0
          env:
            - name: "KAFKA_CFG_BROKER_ID"
              value: "1"
            - name: "KAFKA_CFG_LISTENERS"
              value: "PLAINTEXT://0.0.0.0:9092"
            - name: "KAFKA_CFG_ADVERTISED_LISTENERS"
              value: "PLAINTEXT://kafka01:30008"
            - name: "KAFKA_CFG_ZOOKEEPER_CONNECT"
              value: "zookeeper:2181"
            - name: "ALLOW_PLAINTEXT_LISTENER"
              value: "yes"
          volumeMounts:
            - name: localtime
              mountPath: /etc/localtime
            - name: kafka01-data
              mountPath: /bitnami/kafka/data
            - name: kafka01-logs
              mountPath: /bitnami/kafka/logs
      nodeSelector:
        master: "true"
      volumes:
        - name: localtime
          hostPath:
            path: /usr/share/zoneinfo/Asia/Shanghai
        - name: kafka01-data
          persistentVolumeClaim:
            claimName: kafka01-data
        - name: kafka01-logs
          persistentVolumeClaim:
            claimName: kafka01-logs

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka02
  namespace: mw
spec:
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
        flagno: kafka02
    spec:
      containers:
        - name: kafka02
          image: bitnami/kafka:3.1.0
          env:
            - name: "KAFKA_CFG_BROKER_ID"
              value: "2"
            - name: "KAFKA_CFG_LISTENERS"
              value: "PLAINTEXT://0.0.0.0:9092"
            - name: "KAFKA_CFG_ADVERTISED_LISTENERS"
              value: "PLAINTEXT://kafka02:30009"
            - name: "KAFKA_CFG_ZOOKEEPER_CONNECT"
              value: "zookeeper:2181"
            - name: "ALLOW_PLAINTEXT_LISTENER"
              value: "yes"
          volumeMounts:
            - name: localtime
              mountPath: /etc/localtime
            - name: kafka02-data
              mountPath: /bitnami/kafka/data
            - name: kafka02-logs
              mountPath: /bitnami/kafka/logs
      nodeSelector:
        master: "true"
      volumes:
        - name: localtime
          hostPath:
            path: /usr/share/zoneinfo/Asia/Shanghai
        - name: kafka02-data
          persistentVolumeClaim:
            claimName: kafka02-data
        - name: kafka02-logs
          persistentVolumeClaim:
            claimName: kafka02-logs

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka03
  namespace: mw
spec:
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
        flagno: kafka03
    spec:
      containers:
        - name: kafka03
          image: bitnami/kafka:3.1.0
          env:
            - name: "KAFKA_CFG_BROKER_ID"
              value: "3"
            - name: "KAFKA_CFG_LISTENERS"
              value: "PLAINTEXT://0.0.0.0:9092"
            - name: "KAFKA_CFG_ADVERTISED_LISTENERS"
              value: "PLAINTEXT://kafka03:30010"
            - name: "KAFKA_CFG_ZOOKEEPER_CONNECT"
              value: "zookeeper:2181"
            - name: "ALLOW_PLAINTEXT_LISTENER"
              value: "yes"
          volumeMounts:
            - name: localtime
              mountPath: /etc/localtime
            - name: kafka03-data
              mountPath: /bitnami/kafka/data
            - name: kafka03-logs
              mountPath: /bitnami/kafka/logs
      nodeSelector:
        master: "true"
      volumes:
        - name: localtime
          hostPath:
            path: /usr/share/zoneinfo/Asia/Shanghai
        - name: kafka03-data
          persistentVolumeClaim:
            claimName: kafka03-data
        - name: kafka03-logs
          persistentVolumeClaim:
            claimName: kafka03-logs

---
apiVersion: v1
kind: Service
metadata:
  name: kafka01
  namespace: mw
spec:
  type: NodePort
  ports:
    - port: 30008
      targetPort: 9092
      nodePort: 30008
  selector:
    flagno: kafka01

---
apiVersion: v1
kind: Service
metadata:
  name: kafka02
  namespace: mw
spec:
  type: NodePort
  ports:
    - port: 30009
      targetPort: 9092
      nodePort: 30009
  selector:
    flagno: kafka02

---
apiVersion: v1
kind: Service
metadata:
  name: kafka03
  namespace: mw
spec:
  type: NodePort
  ports:
    - port: 30010
      targetPort: 9092
      nodePort: 30010
  selector:
    flagno: kafka03
